<유니온파인드>
상호 배타적 집합(Disjoint-set) 이라고도 함
2가지 연산으로 이루어짐
 - Union: x와 y가 포함되어 있는 집합을 합치는 연산
 - Find : x가 어떤 집합에 포함되어 있는지를 찾는 연산
 
구현은 간단한 트리를 이용해서 함
Parent[i] = i의 parent 저장한다

ex) 1 2 3 4 5 6 7 8
 - 처음에는 parent[i] = i로 초기화 한다. 이는 부모 없이(간선x) 다 떨어져 있음을 의미
 - 즉 parent[i] = i라는 말은, root를 의미
 
 - 1에 2를 추가하는 경우(2를 1에 붙이는 경우, 1이 parent, 2가 child가 되는 경우) => 여러가지로 표현함
  --> Union(1,2)	 1
   				 	  \
 				 	   2 
 
  - 4에 5를 추가하는 경우(5를 4에 붙이는 경우, 4가 parent 5가 child가 되는 경우)
  --> Union(4,5)      4
  					   \
  					   	5
  
 - 만약 두 집합(1-2 / 4-5)를 합치려면? 
 - 일단 union(2,5)는 안된다 --> 1      4 로 분리되어 버린다.
 							 \	
 							  2
 							   \
 							    5
 	--> idea: 각 집합의 root를 찾아 root끼리 Union을 해준다면 두 집합을 합칠 수 있다.
  - 이때 find 함수를 통해 각 노드의 root값을 찾는다!
   find(2) = 1 , find(5) = 4
   Union(1, 4)
   
   